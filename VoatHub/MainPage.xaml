<Page
    x:Class="VoatHub.MainPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:VoatHub"
    xmlns:voatModels="using:VoatHub.Models.Voat.v1"
    xmlns:voatHubModels="using:VoatHub.Models.VoatHub"
    xmlns:helpers="using:VoatHub.Ui.Helpers"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d"
    Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">

    <Page.Resources>
        <!--Main templates-->
        <DataTemplate x:Key="NavMenuItemTemplate" x:DataType="voatHubModels:NavMenuItem">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="48" />
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>
                <!-- Showing a ToolTip and the Label is redundant.  We put the ToolTip on the icon.
                     It appears when the user hovers over the icon, but not the label which provides
                     value when the SplitView is 'Compact' while reducing the likelihood of showing
                     redundant information when the label is shown.-->
                <FontIcon x:Name="Glyph" FontSize="16" Glyph="{x:Bind SymbolAsChar}" VerticalAlignment="Center" HorizontalAlignment="Center" ToolTipService.ToolTip="{x:Bind Label}"/>
                <TextBlock x:Name="Text" Grid.Column="1" Text="{x:Bind Label}" />
            </Grid>
        </DataTemplate>
        
        <DataTemplate x:Key="SubscriptionItemTemplate" x:DataType="voatModels:ApiSubscription">
            <Grid Padding="48,0,0,0">
                <TextBlock Text="{x:Bind Name}" />
            </Grid>
        </DataTemplate>
    </Page.Resources>

    <Grid>
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup>
                <VisualState>
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="720" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="RootSplitView.DisplayMode" Value="CompactInline"/>
                    </VisualState.Setters>
                </VisualState>
                <VisualState>
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="0" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="RootSplitView.DisplayMode" Value="Overlay"/>
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
        
        <SplitView x:Name="RootSplitView" 
                   DisplayMode="CompactInline"
                   OpenPaneLength="256">
            <SplitView.Pane>
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="48" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>

                    <AutoSuggestBox x:Name="MasterSearchBox" Grid.Row="0"
                                    VerticalAlignment="Center"
                                     Margin="48,0,0,0"
                                    QueryIcon="Find"
                                    QuerySubmitted="SearchBox_QuerySubmitted"
                                    PlaceholderText="Go to Subverse..."/>

                    <ListView x:Name="NavMenuList" Grid.Row="1"
                            ItemContainerStyle="{StaticResource NavMenuItemContainerStyle}"
                            ItemsSource="{x:Bind ViewModel.Navlist, Mode=OneWay}"
                            ItemTemplate="{StaticResource NavMenuItemTemplate}"
                              IsItemClickEnabled="True"
                              SelectionMode="None"
                              ItemClick="NavMenuList_ItemClick"/>

                    <ProgressRing x:Name="MasterProgressRing" Grid.Row="2"
                              Margin="0,50" Width="50" Height="50"
                              Visibility="{x:Bind ViewModel.Subscriptions.HasItems, Converter={StaticResource BoolToNegateVisibilityConverter}, Mode=OneWay}" 
                              IsActive="{x:Bind ViewModel.Subscriptions.HasItems, Converter={StaticResource BoolNegateConverter}, Mode=OneWay}"/>

                    <ListView x:Name="SubscriptionsListView" Grid.Row="3"
                              SelectionMode="None"
                              IsItemClickEnabled="True"
                              ItemClick="SubscriptionsListView_ItemClick"
                              Visibility="{Binding IsPaneOpen, ElementName=RootSplitView, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}"
                              ItemContainerStyle="{StaticResource NavMenuItemContainerStyle}"
                              ItemTemplate="{StaticResource SubscriptionItemTemplate}"
                              ItemsSource="{x:Bind ViewModel.Subscriptions.List, Mode=OneWay}"/>
                </Grid>
            </SplitView.Pane>

            <Grid x:Name="MainGrid">
                <Grid.RowDefinitions>
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>

                <Grid.ColumnDefinitions>
                    <ColumnDefinition x:Name="MasterColumn" Width="400" />
                    <ColumnDefinition x:Name="DetailColumn" Width="*" />
                </Grid.ColumnDefinitions>

                <Frame Grid.Column="0" x:Name="MasterFrame" />

                <Frame Grid.Column="1" x:Name="DetailFrame" />
            </Grid>
        </SplitView>

        <!-- Declared last to have it rendered above everything else, but it needs to be the first item in the tab sequence. -->
        <ToggleButton x:Name="TogglePaneButton"
                      Style="{StaticResource SplitViewTogglePaneButtonStyle}"
                      IsChecked="{Binding IsPaneOpen, ElementName=RootSplitView, Mode=TwoWay}"
                      Checked="TogglePaneButton_Checked"
                      Unchecked="TogglePaneButton_UnChecked"
                      ToolTipService.ToolTip="Menu" />
    </Grid>
</Page>
