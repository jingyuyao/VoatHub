<Page
    x:Class="VoatHub.MainPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:VoatHub"
    xmlns:voatModels="using:VoatHub.Models.Voat.v1"
    xmlns:voatHubModels="using:VoatHub.Models.VoatHub"
    xmlns:helpers="using:VoatHub.Ui.Helpers"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d"
    Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">

    <Page.Resources>
        <!--Converter-->
        <helpers:StringToUriConverter x:Key="StringToUriConverter" />
        <helpers:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter" />
        <helpers:BoolToNegateVisibilityConverter x:Key="BoolToNegateVisibilityConverter" />
        <helpers:NullToVisibilityConverter x:Key="NullToVisibilityConverter" />
        <helpers:TimeAgoConverter x:Key="TimeAgoConverter" />
        <helpers:BoolNegateConverter x:Key="BoolNegateConverter" />

        <!--Main templates-->
        <DataTemplate x:Key="NavMenuItemTemplate" x:DataType="voatHubModels:NavMenuItem">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="48" />
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>
                <!-- Showing a ToolTip and the Label is redundant.  We put the ToolTip on the icon.
                     It appears when the user hovers over the icon, but not the label which provides
                     value when the SplitView is 'Compact' while reducing the likelihood of showing
                     redundant information when the label is shown.-->
                <FontIcon x:Name="Glyph" FontSize="16" Glyph="{x:Bind SymbolAsChar}" VerticalAlignment="Center" HorizontalAlignment="Center" ToolTipService.ToolTip="{x:Bind Label}"/>
                <TextBlock x:Name="Text" Grid.Column="1" Text="{x:Bind Label}" />
            </Grid>
        </DataTemplate>
        
        <DataTemplate x:Key="SubmissionItemTemplate" x:DataType="voatModels:ApiSubmission">
            <Grid Margin="0,10,10,10">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>

                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>

                <Image Margin="5,0">
                    <Image.Source>
                        <BitmapImage UriSource="{x:Bind Thumbnail, Converter={StaticResource StringToUriConverter}, TargetNullValue={x:Null}}" />
                    </Image.Source>
                </Image>

                <Grid Grid.Column="1">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>

                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>

                    <TextBlock Text="{x:Bind Title}"
                           Foreground="{ThemeResource SystemControlForegroundBaseHighBrush}"
                           Style="{ThemeResource SubtitleTextBlockStyle}" />

                    <Grid Grid.Row="1">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>

                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>

                        <TextBlock MaxLines="1"
                                   Foreground="{ThemeResource SystemControlForegroundBaseMediumBrush}"
                                   Style="{ThemeResource BodyTextBlockStyle}">
                            <Run FontWeight="Bold" Text="{x:Bind UserName}"/>
                            <Run Text="{x:Bind TotalVotes}"/> points.
                        </TextBlock>

                        <TextBlock Text="{x:Bind Date, Converter={StaticResource TimeAgoConverter}}" Grid.Column="1" Grid.Row="1" Margin="12,2,0,0"
                           Foreground="{ThemeResource SystemControlForegroundBaseMediumBrush}"
                           Style="{ThemeResource BodyTextBlockStyle}" />
                    </Grid>
                </Grid>

                <Button Grid.Column="2" Click="SubmissionCommentsButton_Click" Tag="{Binding}" 
                        Padding="10,10" BorderThickness="2" Background="Transparent">
                    <SymbolIcon Symbol="Comment" Foreground="Blue" />
                </Button>
            </Grid>
        </DataTemplate>

        <DataTemplate x:Key="SubscriptionItemTemplate" x:DataType="voatModels:ApiSubscription">
            <Grid Padding="48,0,0,0">
                <TextBlock Text="{x:Bind Name}" />
            </Grid>
        </DataTemplate>

        <DataTemplate x:Key="CommentTreeTemplate" x:DataType="voatHubModels:CommentTree">
            <StackPanel Padding="10,5,0,5">
                <StackPanel Orientation="Vertical"
                                Padding="10,0,0,0"
                                BorderBrush="LightBlue"
                                BorderThickness="1.5,0,0,0">

                    <StackPanel Orientation="Horizontal">
                        <TextBlock Foreground="{ThemeResource SystemControlForegroundBaseMediumBrush}">
                            <Run FontWeight="Bold" Text="{x:Bind Comment.UserName}"/>
                            <Run Text="{x:Bind Comment.TotalVotes}"/> points
                            <Run Text="{x:Bind Comment.Date, Converter={StaticResource TimeAgoConverter}}"/>
                        </TextBlock>
                        <Button Click="CommentUpVote_Click" Background="Transparent">
                            <SymbolIcon Symbol="Up"/>
                        </Button>
                        <Button Click="CommentDownVote_Click" Background="Transparent">
                            <SymbolIcon Symbol="Up" RenderTransformOrigin="0.5,0.5">
                                <SymbolIcon.RenderTransform>
                                    <ScaleTransform ScaleY="-1" />
                                </SymbolIcon.RenderTransform>
                            </SymbolIcon>
                        </Button>
                        <Button Click="OpenCommentReply_Click" Background="Transparent">
                            <SymbolIcon Symbol="MailReply"/>
                        </Button>
                    </StackPanel>

                    <TextBlock Text="{x:Bind Comment.Content}"
                               FontSize="{ThemeResource TextStyleLargeFontSize}"
                               Foreground="{ThemeResource SystemControlForegroundBaseHighBrush}"
                               HorizontalAlignment="Left"
                               Style="{ThemeResource BodyTextBlockStyle}"
                               IsTapEnabled="True"/>

                    <StackPanel Visibility="{x:Bind ReplyOpen, Converter={StaticResource BoolToVisibilityConverter}, Mode=OneWay}">
                        <TextBox Text="{x:Bind ReplyText, Mode=TwoWay}" 
                                 AcceptsReturn="True" TextWrapping="Wrap" 
                                 PlaceholderText="Post reply..."/>
                        <StackPanel Orientation="Horizontal">
                            <Button Click="CloseCommentReply_Click" Content="Close" />
                            <Button Click="SendCommentReply_Click" Content="Submit"/>
                        </StackPanel>
                    </StackPanel>
                </StackPanel>

                <ListView SelectionMode="None"
                          IsItemClickEnabled="False"
                          ItemTemplate="{StaticResource CommentTreeTemplate}"
                          ItemContainerStyle="{StaticResource ContentTreeItemStyle}"
                          ItemsSource="{x:Bind Children, Mode=OneWay}"/>
            </StackPanel>
        </DataTemplate>
    </Page.Resources>

    <Grid>
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup>
                <VisualState>
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="720" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="RootSplitView.DisplayMode" Value="CompactInline"/>
                    </VisualState.Setters>
                </VisualState>
                <VisualState>
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="0" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="RootSplitView.DisplayMode" Value="Overlay"/>
                        <!--This prevents the hamberger button from overlapping with the title-->
                        <Setter Target="MasterCommandBar.Padding" Value="48,0,0,0"/>
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
        
        <SplitView x:Name="RootSplitView" 
                   DisplayMode="CompactInline"
                   OpenPaneLength="256">
            <SplitView.Pane>
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="48" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>

                    <AutoSuggestBox x:Name="MasterSearchBox" Grid.Row="0"
                                    VerticalAlignment="Center"
                                     Margin="48,0,0,0"
                                    QueryIcon="Find"
                                    QuerySubmitted="MasterSearchBox_QuerySubmitted"
                                    PlaceholderText="Go to Subverse..."/>

                    <ListView x:Name="NavMenuList" Grid.Row="1"
                            ItemContainerStyle="{StaticResource NavMenuItemContainerStyle}"
                            ItemsSource="{x:Bind ViewModel.Navlist, Mode=OneWay}"
                            ItemTemplate="{StaticResource NavMenuItemTemplate}"
                              IsItemClickEnabled="True"
                              SelectionMode="None"
                              ItemClick="NavMenuList_ItemClick"/>

                    <ProgressRing x:Name="MasterProgressRing" Grid.Row="2"
                              Margin="0,50" Width="50" Height="50"
                              Visibility="{x:Bind ViewModel.Subscriptions.Loading, Converter={StaticResource BoolToVisibilityConverter}, Mode=OneWay}" 
                              IsActive="{x:Bind ViewModel.Subscriptions.Loading, Mode=OneWay}"/>

                    <ListView x:Name="SubscriptionsListView" Grid.Row="3"
                              SelectionMode="None"
                              IsItemClickEnabled="True"
                              ItemClick="SubscriptionsListView_ItemClick"
                              Visibility="{Binding IsPaneOpen, ElementName=RootSplitView, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}"
                              ItemContainerStyle="{StaticResource NavMenuItemContainerStyle}"
                              ItemTemplate="{StaticResource SubscriptionItemTemplate}"
                              ItemsSource="{x:Bind ViewModel.Subscriptions.List, Mode=OneWay}"/>
                </Grid>
            </SplitView.Pane>

            <Grid x:Name="MainGrid">
                <Grid.RowDefinitions>
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>

                <Grid.ColumnDefinitions>
                    <ColumnDefinition x:Name="MasterColumn" Width="500" />
                    <ColumnDefinition x:Name="DetailColumn" Width="*" />
                </Grid.ColumnDefinitions>

                <Grid x:Name="MasterColumnGrid" Grid.Column="0">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>

                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    
                    <CommandBar Grid.Row="0" x:Name="MasterCommandBar">
                        <CommandBar.Content>
                            <TextBlock HorizontalAlignment="Left" Margin="12,14">
                                <Run FontWeight="Bold" Text="{x:Bind ViewModel.CurrentSubverse, Mode=OneWay}" /> 
                                :: <Run Text="{x:Bind ViewModel.SubmissionSort, Mode=OneWay}"/>
                            </TextBlock>
                        </CommandBar.Content>

                        <AppBarButton Icon="Back" Label="Back" Tag="Back" Click="MasterCommandBarButton_Click"/>
                        <AppBarButton Icon="Sort" Label="Sort">
                            <AppBarButton.Flyout>
                                <MenuFlyout>
                                    <MenuFlyoutItem Text="Hot" Click="SortSubmissions_Click"/>
                                    <MenuFlyoutItem Text="New" Click="SortSubmissions_Click"/>
                                    <MenuFlyoutItem Text="Top" Click="SortSubmissions_Click"/>
                                </MenuFlyout>
                            </AppBarButton.Flyout>
                        </AppBarButton>

                        <AppBarButton Icon="Refresh" Label="Refresh" Tag="refresh" Click="MasterCommandBarButton_Click"/>

                        <CommandBar.SecondaryCommands>
                            <AppBarToggleButton Icon="Favorite" Label="Subscribe" 
                                                IsChecked="{x:Bind ViewModel.CurrentlySubscribed, Mode=TwoWay}"
                                                Click="SubscribeButton_Click"/>
                            <AppBarButton Icon="Add" Label="New Post" Click="NewPost_Click" />
                        </CommandBar.SecondaryCommands>
                    </CommandBar>

                    <Grid x:Name="MasterContentGrid" Grid.Row="1">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>

                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>

                        <!--TODO: Added other submission options when they became avaiable in the API-->
                        <Popup x:Name="NewSubmissionPopup">
                            <Grid Height="{Binding ActualHeight, ElementName=MasterColumnGrid, Mode=OneWay}"
                                  Width="{Binding ActualWidth, ElementName=MasterColumnGrid, Mode=OneWay}"
                                  Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">
                                <StackPanel>
                                    <Pivot>
                                        <PivotItem Header="New Link">
                                            <Grid>
                                                <Grid.RowDefinitions>
                                                    <RowDefinition />
                                                    <RowDefinition />
                                                    <RowDefinition />
                                                </Grid.RowDefinitions>

                                                <TextBox Grid.Row="0" x:Name="LinkTitle" PlaceholderText="Title (Min length: 5)"/>
                                                <TextBox Grid.Row="1" x:Name="LinkUrl" PlaceholderText="Url (Full path)"/>

                                                <StackPanel Grid.Row="2" Orientation="Horizontal" HorizontalAlignment="Right">
                                                    <Button Content="Close"
                                                            Tag="{Binding ElementName=NewSubmissionPopup}" 
                                                            Click="ClosePopup_Click"/>
                                                    <Button Content="New Link" Click="NewLink_Click" />
                                                </StackPanel>
                                            </Grid>
                                        </PivotItem>

                                        <PivotItem Header="New Discussion">
                                            <Grid>
                                                <Grid.RowDefinitions>
                                                    <RowDefinition />
                                                    <RowDefinition />
                                                    <RowDefinition />
                                                </Grid.RowDefinitions>

                                                <TextBox Grid.Row="0" x:Name="DiscussionTitle" PlaceholderText="Title (Min length: 5)"/>
                                                <TextBox Grid.Row="1" x:Name="DiscussionContent" 
                                                            AcceptsReturn="True" TextWrapping="Wrap" 
                                                            PlaceholderText="Content"/>

                                                <StackPanel Grid.Row="2" Orientation="Horizontal" HorizontalAlignment="Right">
                                                    <Button Content="Close"
                                                            Tag="{Binding ElementName=NewSubmissionPopup}" 
                                                            Click="ClosePopup_Click"/>
                                                    <Button Content="New Discussion" Click="NewDiscussion_Click" />
                                                </StackPanel>
                                            </Grid>
                                        </PivotItem>
                                    </Pivot>
                                    <TextBlock x:Name="NewSubmissionPopupErrorBlock" />
                                    <ProgressRing x:Name="NewSubmissionPopupProgressRing" Style="{StaticResource DefaultProgressRingStyle}" />
                                </StackPanel>
                            </Grid>
                        </Popup>

                        <!--TODO: Put this into its own control template or something that can be reused-->
                        <ContentPresenter x:Name="MasterContent" Grid.Row="1">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="*" />
                                </Grid.RowDefinitions>

                                <ProgressRing x:Name="SubscriptionListProgressRing" Grid.Row="0"
                                              Margin="0,50" Width="50" Height="50"
                                              Visibility="{x:Bind ViewModel.SubmissionList.Loading, Converter={StaticResource BoolToVisibilityConverter}, Mode=OneWay}" 
                                              IsActive="{x:Bind ViewModel.SubmissionList.Loading, Mode=OneWay}"/>

                                <!--Note: ListView must be visibile in order for it to request more items.-->
                                <ListView x:Name="MasterListView" Grid.Row="1"
                                          ItemTemplate="{StaticResource SubmissionItemTemplate}"
                                          ItemsSource="{x:Bind ViewModel.SubmissionList.List, Mode=OneWay}"
                                          IsItemClickEnabled="True"
                                          ItemClick="MasterListView_ItemClick">
                                    <ListView.Header>
                                        <!--Only show if its not loading and list has no items-->
                                        <Grid Visibility="{x:Bind ViewModel.SubmissionList.Loading, Converter={StaticResource BoolToNegateVisibilityConverter}, Mode=OneWay}">
                                            <TextBlock Text="There is nothing here." 
                                               Visibility="{x:Bind ViewModel.SubmissionList.HasItems, Converter={StaticResource BoolToNegateVisibilityConverter}, Mode=OneWay}" />
                                        </Grid>
                                    </ListView.Header>

                                    <ListView.ItemContainerStyle>
                                        <Style TargetType="ListViewItem">
                                            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                                        </Style>
                                    </ListView.ItemContainerStyle>
                                </ListView>
                            </Grid>
                        </ContentPresenter>
                    </Grid>
                </Grid>

                <Grid x:Name="DetailColumnGrid"
                  BorderThickness="1,0,0,0"
                  BorderBrush="{ThemeResource SystemControlForegroundBaseLowBrush}"
                  Grid.Column="1">
                    <Grid.RowDefinitions>
                        <RowDefinition x:Name="DetailCommandBarRow" Height="Auto" />
                        <RowDefinition x:Name="DetailContentRow" Height="*" />
                    </Grid.RowDefinitions>

                    <Grid.ColumnDefinitions>
                        <ColumnDefinition x:Name="DetailOuterColumn" Width="*" />
                    </Grid.ColumnDefinitions>

                    <CommandBar x:Name="DetailCommandBar" Grid.Row="0">
                        <CommandBar.Content>
                            <TextBlock Margin="12,14">
                                Sort By: <Run Text="{x:Bind ViewModel.CommentSort, Mode=OneWay}" />
                            </TextBlock>
                        </CommandBar.Content>

                        <AppBarButton Icon="Back" Label="Back" Tag="back" Click="DetailCommandBarButton_Click"/>
                        <AppBarButton Icon="Sort" Label="Sort">
                            <AppBarButton.Flyout>
                                <MenuFlyout>
                                    <MenuFlyoutItem Text="Hot" Click="SortComments_Click"/>
                                    <MenuFlyoutItem Text="New" Click="SortComments_Click"/>
                                    <MenuFlyoutItem Text="Top" Click="SortComments_Click"/>
                                </MenuFlyout>
                            </AppBarButton.Flyout>
                        </AppBarButton>
                        
                        <AppBarButton Icon="Refresh" Label="Refresh" Tag="refresh" Click="DetailCommandBarButton_Click"/>
                        <AppBarButton Icon="Comment" Label="Comments" Click="SubmissionCommentsButton_Click"
                                  Tag="{x:Bind ViewModel.CurrentSubmission.Submission, Mode=OneWay}"/>

                        <CommandBar.SecondaryCommands>
                            <AppBarButton Icon="Save" Label="Save" Tag="save" Click="DetailCommandBarButton_Click"/>
                            <AppBarButton Icon="ReShare"  Label="Share" Tag="share" Click="DetailCommandBarButton_Click"/>
                        </CommandBar.SecondaryCommands>
                        
                        <!--<CommandBar.SecondaryCommands>
                        <AppBarButton Icon="Dislike" Label="Dislike" Tag="dislike" Click="DetailCommandBarButton_Click"/>
                    </CommandBar.SecondaryCommands>-->
                    </CommandBar>
                    
                    <!--Wraps Title, WebView, Content and Comments-->
                    <ScrollViewer Grid.Row="1"
                              x:Name="DetailContentViewer"
                              Visibility="{x:Bind ViewModel.CurrentSubmission.Submission, Converter={StaticResource NullToVisibilityConverter}, Mode=OneWay}"
                              HorizontalScrollBarVisibility="Disabled" 
                              VerticalScrollBarVisibility="Auto"
                              Padding="24,0">

                        <Grid x:Name="DetailContentGrid">
                            <Grid.RowDefinitions>
                                <RowDefinition x:Name="DetailTitleRow" Height="Auto" />
                                <RowDefinition x:Name="DetailWebViewRow" Height="Auto" />
                                <RowDefinition x:Name="DetailCommentsRow" Height="Auto" />
                            </Grid.RowDefinitions>

                            <Grid.ColumnDefinitions>
                                <ColumnDefinition x:Name="DetailInnerColumn" Width="*" />
                            </Grid.ColumnDefinitions>

                            <StackPanel Grid.Row="0" SizeChanged="DetailTitleRow_SizeChanged">
                                <TextBlock Margin="0,8" Style="{ThemeResource TitleTextBlockStyle}"
                                        Foreground="{ThemeResource SystemControlForegroundBaseHighBrush}"
                                        FontWeight="Bold"
                                        HorizontalAlignment="Left" Text="{x:Bind ViewModel.CurrentSubmission.Submission.Title, Mode=OneWay}"/>

                                <StackPanel Orientation="Horizontal">
                                    <TextBlock Foreground="{ThemeResource SystemControlForegroundBaseMediumBrush}">
                                        <Run FontWeight="Bold" Text="{x:Bind ViewModel.CurrentSubmission.Submission.UserName, Mode=OneWay}"/>
                                        <Run Text="{x:Bind ViewModel.CurrentSubmission.Submission.TotalVotes, Mode=OneWay}"/> points
                                        <Run Text="{x:Bind ViewModel.CurrentSubmission.Submission.Date, Converter={StaticResource TimeAgoConverter}, Mode=OneWay}"/>
                                    </TextBlock>

                                    <Button Click="SubmissionUpVote_Click" Tag="{x:Bind ViewModel.CurrentSubmission.Submission, Mode=OneWay}"
                                            Background="Transparent">
                                        <SymbolIcon Symbol="Up"/>
                                    </Button>

                                    <Button Click="SubmissionDownVote_Click"  
                                            Tag="{x:Bind ViewModel.CurrentSubmission.Submission, Mode=OneWay}"
                                            Background="Transparent">
                                        <SymbolIcon Symbol="Up" RenderTransformOrigin="0.5,0.5">
                                            <SymbolIcon.RenderTransform>
                                                <ScaleTransform ScaleY="-1" />
                                            </SymbolIcon.RenderTransform>
                                        </SymbolIcon>
                                    </Button>

                                    <Button Click="OpenSubmissionReply_Click"  Background="Transparent">
                                        <SymbolIcon Symbol="MailReply"/>
                                    </Button>
                                </StackPanel>
                            </StackPanel>

                            <WebView Grid.Row="1"
                                     x:Name="DetailWebView"
                                     Source="{x:Bind ViewModel.CurrentSubmission.Uri, Mode=OneWay}"
                                     Visibility="{x:Bind ViewModel.CurrentSubmission.ShowComments, Converter={StaticResource BoolToNegateVisibilityConverter}, Mode=OneWay}"/>

                            <StackPanel Grid.Row="2"
                                    Visibility="{x:Bind ViewModel.CurrentSubmission.ShowComments, Converter={StaticResource BoolToVisibilityConverter}, Mode=OneWay}">
                                
                                <TextBlock Margin="0,9" HorizontalAlignment="Left" MaxWidth="560"
                                    FontSize="{ThemeResource TextStyleLargeFontSize}"
                                    Foreground="{ThemeResource SystemControlForegroundBaseHighBrush}"
                                    Style="{ThemeResource SubtitleTextBlockStyle}" 
                                    Text="{x:Bind ViewModel.CurrentSubmission.Submission.Content, Mode=OneWay}" />

                                <StackPanel Visibility="{x:Bind ViewModel.CurrentSubmission.ReplyOpen, Converter={StaticResource BoolToVisibilityConverter}, Mode=OneWay}">
                                    <TextBox Text="{x:Bind ViewModel.CurrentSubmission.ReplyText, Mode=TwoWay}" 
                                             AcceptsReturn="True" TextWrapping="Wrap" 
                                             PlaceholderText="Post reply..."/>
                                    <StackPanel Orientation="Horizontal">
                                        <Button Click="CloseSubmissionReply_Click"  Content="Close" />
                                        <Button Click="SendSubmissionReply_Click"  Content="Submit"/>
                                    </StackPanel>
                                </StackPanel>

                                <ProgressRing Margin="0,50" Width="50" Height="50"
                                      Visibility="{x:Bind ViewModel.CurrentSubmission.LoadingComments, Converter={StaticResource BoolToVisibilityConverter}, Mode=OneWay}" 
                                      IsActive="{x:Bind ViewModel.CurrentSubmission.LoadingComments, Mode=OneWay}"/>

                                <ListView SelectionMode="None"
                                  IsItemClickEnabled="False"
                                  ItemContainerStyle="{StaticResource ContentTreeItemStyle}"
                                  ItemTemplate="{StaticResource CommentTreeTemplate}"
                                  ItemsSource="{x:Bind ViewModel.CurrentSubmission.Comments, Mode=OneWay}" />
                            </StackPanel>
                        </Grid>
                    </ScrollViewer>
                </Grid>
            </Grid>
        </SplitView>

        <!-- Declared last to have it rendered above everything else, but it needs to be the first item in the tab sequence. -->
        <ToggleButton x:Name="TogglePaneButton"
                      Style="{StaticResource SplitViewTogglePaneButtonStyle}"
                      IsChecked="{Binding IsPaneOpen, ElementName=RootSplitView, Mode=TwoWay}"
                      Unchecked="TogglePaneButton_Checked"
                      ToolTipService.ToolTip="Menu" />
    </Grid>
</Page>
