<Page
    x:Class="VoatHub.MasterPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:VoatHub"
    xmlns:voatModels="using:VoatHub.Models.Voat.v1"
    xmlns:voatHubModels="using:VoatHub.Models.VoatHub"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d">

    <Page.Resources>
        <DataTemplate x:Key="SubmissionItemTemplate" x:DataType="voatModels:ApiSubmission">
            <Grid Margin="0,10,10,10">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>

                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>

                <Image Margin="5,0">
                    <Image.Source>
                        <BitmapImage UriSource="{x:Bind Thumbnail, Converter={StaticResource StringToUriConverter}, TargetNullValue={x:Null}}" />
                    </Image.Source>
                </Image>

                <Grid Grid.Column="1">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>

                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>

                    <TextBlock Text="{x:Bind Title}"
                           Foreground="{ThemeResource SystemControlForegroundBaseHighBrush}"
                           Style="{ThemeResource SubtitleTextBlockStyle}" />

                    <Grid Grid.Row="1">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>

                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>

                        <TextBlock MaxLines="1"
                                   Foreground="{ThemeResource SystemControlForegroundBaseMediumBrush}"
                                   Style="{ThemeResource BodyTextBlockStyle}">
                            <Run FontWeight="Bold" Text="{x:Bind UserName}"/>
                            <Run Text="{x:Bind TotalVotes}"/> points.
                        </TextBlock>

                        <TextBlock Text="{x:Bind Date, Converter={StaticResource TimeAgoConverter}}" Grid.Column="1" Grid.Row="1" Margin="12,2,0,0"
                           Foreground="{ThemeResource SystemControlForegroundBaseMediumBrush}"
                           Style="{ThemeResource BodyTextBlockStyle}" />
                    </Grid>
                </Grid>

                <Button Grid.Column="2" Click="SubmissionCommentsButton_Click"
                        Padding="10,10" BorderThickness="2" Background="Transparent">
                    <StackPanel>
                        <SymbolIcon Symbol="Comment" Foreground="Blue" />
                        <TextBlock Text="{x:Bind CommentCount}"
                                   HorizontalAlignment="Center"
                                   Style="{ThemeResource BodyTextBlockStyle}" />
                    </StackPanel>
                </Button>

            </Grid>
        </DataTemplate>
    </Page.Resources>

    <Grid x:Name="RootGrid" Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup>
                <VisualState>
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="720" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="MasterCommandBar.Padding" Value="0"/>
                    </VisualState.Setters>
                </VisualState>
                <VisualState>
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="0" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <!--This prevents the hamberger button from overlapping with the title-->
                        <Setter Target="MasterCommandBar.Padding" Value="48,0,0,0"/>
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
        
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>

        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>

        <CommandBar Grid.Row="0" x:Name="MasterCommandBar">
            <CommandBar.Content>
                <TextBlock HorizontalAlignment="Left" Margin="12,14">
                                <Run FontWeight="Bold" Text="{x:Bind ViewModel.Subverse, Mode=OneWay}" /> 
                                :: <Run Text="{x:Bind ViewModel.Sort, Mode=OneWay}"/>
                </TextBlock>
            </CommandBar.Content>

            <AppBarButton Icon="Back" Label="Back" Tag="Back" IsEnabled="{x:Bind Frame.CanGoBack, Mode=OneWay}" 
                          Click="BackButton_Click"/>
            <AppBarButton Icon="Sort" Label="Sort">
                <AppBarButton.Flyout>
                    <MenuFlyout>
                        <MenuFlyoutItem Text="Hot" Click="SortSubmissions_Click"/>
                        <MenuFlyoutItem Text="New" Click="SortSubmissions_Click"/>
                        <MenuFlyoutItem Text="Top" Click="SortSubmissions_Click"/>
                    </MenuFlyout>
                </AppBarButton.Flyout>
            </AppBarButton>

            <AppBarButton Icon="Refresh" Label="Refresh" Tag="refresh" Click="RefreshButton_Click"/>

            <CommandBar.SecondaryCommands>
                <AppBarToggleButton Icon="Favorite" Label="Subscribe" 
                                                IsChecked="{x:Bind ViewModel.IsSubscribed, Mode=TwoWay}"
                                                Click="SubscribeButton_Click"/>
                <AppBarButton Icon="Add" Label="New Post" Click="NewPost_Click" />
            </CommandBar.SecondaryCommands>
        </CommandBar>

        <Grid x:Name="MasterContentGrid" Grid.Row="1">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>

            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>

            <!--TODO: Added other submission options when they became avaiable in the API-->
            <Popup x:Name="NewSubmissionPopup">
                <Grid Height="{Binding ActualHeight, ElementName=MasterContentGrid, Mode=OneWay}"
                                  Width="{Binding ActualWidth, ElementName=MasterContentGrid, Mode=OneWay}"
                                  Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">
                    <StackPanel>
                        <Pivot>
                            <PivotItem Header="New Link">
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition />
                                        <RowDefinition />
                                        <RowDefinition />
                                    </Grid.RowDefinitions>

                                    <TextBox Grid.Row="0" x:Name="LinkTitle" PlaceholderText="Title (Min length: 5)"/>
                                    <TextBox Grid.Row="1" x:Name="LinkUrl" PlaceholderText="Url (Full path)"/>

                                    <StackPanel Grid.Row="2" Orientation="Horizontal" HorizontalAlignment="Right">
                                        <Button Content="Close"
                                                            Tag="{Binding ElementName=NewSubmissionPopup}" 
                                                            Click="ClosePopup_Click"/>
                                        <Button Content="New Link" Click="NewLink_Click" />
                                    </StackPanel>
                                </Grid>
                            </PivotItem>

                            <PivotItem Header="New Discussion">
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition />
                                        <RowDefinition />
                                        <RowDefinition />
                                    </Grid.RowDefinitions>

                                    <TextBox Grid.Row="0" x:Name="DiscussionTitle" PlaceholderText="Title (Min length: 5)"/>
                                    <TextBox Grid.Row="1" x:Name="DiscussionContent" 
                                                            AcceptsReturn="True" TextWrapping="Wrap" 
                                                            PlaceholderText="Content"/>

                                    <StackPanel Grid.Row="2" Orientation="Horizontal" HorizontalAlignment="Right">
                                        <Button Content="Close"
                                                            Tag="{Binding ElementName=NewSubmissionPopup}" 
                                                            Click="ClosePopup_Click"/>
                                        <Button Content="New Discussion" Click="NewDiscussion_Click" />
                                    </StackPanel>
                                </Grid>
                            </PivotItem>
                        </Pivot>
                        <TextBlock x:Name="NewSubmissionPopupErrorBlock" />
                        <ProgressRing x:Name="NewSubmissionPopupProgressRing" Style="{StaticResource DefaultProgressRingStyle}" />
                    </StackPanel>
                </Grid>
            </Popup>

            <!--TODO: Put this into its own control template or something that can be reused-->
            <ContentPresenter x:Name="MasterContent" Grid.Row="1">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="*" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>

                    <!--Only visible and active when there are no items and it is loading-->
                    <ProgressRing Grid.Row="0"
                                Margin="0,50" Width="50" Height="50"
                                Visibility="{x:Bind ViewModel.SubmissionList.HasItems, Converter={StaticResource BoolToNegateVisibilityConverter}, Mode=OneWay}" 
                                IsActive="{x:Bind ViewModel.SubmissionList.Loading, Mode=OneWay}"/>

                    <!--Note: ListView must be visibile in order for it to request more items.-->
                    <ListView x:Name="MasterListView" Grid.Row="1"
                            ItemTemplate="{StaticResource SubmissionItemTemplate}"
                            ItemsSource="{x:Bind ViewModel.SubmissionList.List, Mode=OneWay}"
                            IsItemClickEnabled="True"
                            ItemClick="MasterListView_ItemClick">
                        <ListView.Header>
                            <!--Only show if its not loading and list has no items-->
                            <Grid Visibility="{x:Bind ViewModel.SubmissionList.Loading, Converter={StaticResource BoolToNegateVisibilityConverter}, Mode=OneWay}">
                                <TextBlock Text="There is nothing here." 
                                               Visibility="{x:Bind ViewModel.SubmissionList.HasItems, Converter={StaticResource BoolToNegateVisibilityConverter}, Mode=OneWay}" />
                            </Grid>
                        </ListView.Header>

                        <ListView.ItemContainerStyle>
                            <Style TargetType="ListViewItem">
                                <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                            </Style>
                        </ListView.ItemContainerStyle>
                    </ListView>

                    <!--Avoids showing ProgressBar and ProgressRing at the same time-->
                    <Grid Grid.Row="2" Visibility="{x:Bind ViewModel.SubmissionList.HasItems, Converter={StaticResource BoolToVisibilityConverter}, Mode=OneWay}">
                        <ProgressBar  IsIndeterminate="{x:Bind ViewModel.SubmissionList.Loading, Mode=OneWay}"
                                Height="10"
                                Visibility="{x:Bind ViewModel.SubmissionList.Loading, Converter={StaticResource BoolToVisibilityConverter}, Mode=OneWay}"/>
                    </Grid>
                </Grid>
            </ContentPresenter>
        </Grid>
    </Grid>
</Page>
